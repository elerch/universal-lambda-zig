name: AWS-Zig Build
run-name: ${{ github.actor }} building Universal Lambda
on: [push]
env:
  ACTIONS_RUNTIME_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ACTIONS_RUNTIME_URL: ${{ env.GITHUB_SERVER_URL }}/api/actions_pipeline/
jobs:
  build-zig-0.11.0-amd64-host:
    runs-on: ubuntu-latest
    env:
      ZIG_VERSION: 0.11.0
      ARCH: x86_64
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      # ARCH is fine, but we can't substitute directly because zig
      # uses x86_64 instead of amd64. They also use aarch64 instead of arm64.
      #
      # However, arm64/linux isn't quite fully tier 1 yet, so this is more of a
      # TODO: https://github.com/ziglang/zig/issues/2443
      - run: wget -q https://ziglang.org/download/${ZIG_VERSION}/zig-linux-${ARCH}-${ZIG_VERSION}.tar.xz
      - run: tar x -C /usr/local -f zig-linux-${ARCH}-${ZIG_VERSION}.tar.xz
      - run: ln -s /usr/local/zig-linux-${ARCH}-${ZIG_VERSION}/zig /usr/local/bin/zig
      - run: curl https://wasmtime.dev/install.sh -sSf | bash
      - run: zig build test
      - run: zig build test -Dtarget=arm-linux # we want to know we can build for 32 bit 
      - run: zig build test -Dtarget=wasm32-wasi -fwasmtime # downstream needs this for CF workers
      - name: Notify
        uses: https://git.lerch.org/lobo/action-notify-ntfy@v2
        if: always()
        with:
          host: ${{ secrets.NTFY_HOST }}
          topic: ${{ secrets.NTFY_TOPIC }}
          user: ${{ secrets.NTFY_USER }}
          password: ${{ secrets.NTFY_PASSWORD }}
